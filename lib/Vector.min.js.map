{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4143c899b0fbacd749b7","webpack:///./src/Vector.js"],"names":["Vector","x","y","prototype","clone","set","prop","val","add","args","length","vec","subtract","multiply","magnitude","Math","sqrt","magnitudeSq","negate","rotate","angle","sin","cos","dot","cross","angleTo","a","b","d","theta","acos","getAngle","mode","atan","PI","atan2","normalize","mag","perp","side","tmp","distanceTo","scalarProject","scalarProjectUnit","vectorProject","scalarComp","vectorProjectUnit","translate","vector","v1","v2","angleBetween","v"],"mappings":"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","file":"Vector.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Vector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vector\"] = factory();\n\telse\n\t\troot[\"Vector\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4143c899b0fbacd749b7","/**\n * Generic Vector class\n *\n *\n * @example\n * import vector, {Vector} from 'Vector';\n *\n * Instantiate new objects in the following ways\n *  1. use vector convenience function like so: vector(x, y);\n *  2. use Vector object directly like: new Vector(x, y);\n *\n * Methods on a newly created vector, such as .add or .subtract\n * modify the x and y properties on that vector, changing them forever\n * i.e.\n *      let vec1 = vector(0, 0);\n *      let vec2 = vector(10, 20);\n *      vec1.add(vec2);\n *\n * Results in vec1.x = 10 and vec1.y = 20.  vec2 is unmodified\n *\n * To perform an operation on two vectors and return a new vector,\n * without modifying the input vectors, use the methods on {Vector}\n * i.e.\n *      let vec1 = vector(0, 0);\n *      let vec2 = vector(10, 20);\n *      let vec3 = Vector.add(vec1, vec2);\n *\n * Results in vec1 and vec2 remining unmodified,\n * and vec3.x = 10 and vec3.y = 20\n *\n */\n\n// import {radToDeg} from './math';\n\n/**\n * Base Vector constructor\n * @constructor\n * @param {number} x - x coordinate\n * @param {number} y - y coordinate\n */\nexport const Vector = function(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n};\n\n/**\n * Prototype object for all Vectors\n */\nVector.prototype = {\n    /**\n     * Return a copy of a vector\n     * @method\n     * @return {Vector} a new vector object\n     */\n    clone: function() {\n        return new Vector(this.x, this.y);\n    },\n\n    /**\n     * Generic Setter\n     * @method\n     * @param {string} prop - property to set\n     * @param {*} val - value to set\n     * @return {This} for chaining\n     */\n    set: function(prop, val) {\n        if (prop === 'x') {\n            this.x = val;\n        } else if (prop === 'y') {\n            this.y = val;\n        }\n        return this;\n    },\n\n    /**\n     * Add another vector to this vector, modifying internal\n     * properties\n     * @method\n     * @param {Vector} vec - vector to add\n     * @return {This} for chaining\n     */\n    add: function(...args) {\n        let x, y;\n        if (args.length === 1) {\n            let vec = args[0];\n            if (typeof vec === 'object') {\n                x = vec.x;\n                y = vec.y;\n            }\n        } else if (args.length === 2) {\n            if (typeof args[0] === 'number' && typeof args[1] === 'number') {\n                x = args[0];\n                y = args[1];\n            }\n        }\n\n        this.x += x;\n        this.y += y;\n\n        return this;\n    },\n\n    /**\n     * Subtract another vector from this vector\n     * @method\n     * @param {Vector} vec - vector to subtract\n     * @return {This} for chaining\n     */\n    subtract: function(vec) {\n        this.x -= vec.x;\n        this.y -= vec.y;\n        return this;\n    },\n\n    /**\n     * Multiply another vector by this vector or scalar\n     * modifies internal properties\n     * @param {Vector|number} vec - either Vector object or single scalar\n     * @return {This} for chaining\n     */\n    multiply: function(vec) {\n        if (typeof vec === 'object') {\n            this.x *= vec.x;\n            this.y *= vec.y;\n        } else if (typeof vec === 'number') {\n            this.x *= vec;\n            this.y *= vec;\n        }\n\n        return this;\n    },\n\n    /**\n     * Gives the magnitude (length, essentially) of the vector\n     * @method\n     * @return {number} magnitude of the vector\n     */\n    magnitude: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Magnitude squared - useful when trying to save on computation\n     * @method\n     * @return {number} mag squared\n     */\n    magnitudeSq: function() {\n        return this.x * this.x + this.y * this.y;\n    },\n\n    /**\n     * Negate both x and y values (essentially rotate vector 180 degrees)\n     * @method\n     * @return {Vector} for method chaining\n     */\n    negate: function() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    },\n\n    /**\n     * Translate to specified x and y points\n     * @param {number} x - amount to move in the x\n     * @param {number} y - amount to move in the y\n     * @return {This} for chaining\n     */\n    // translate:\n    // function(x, y) {\n    //     this.x += x;\n    //     this.y += y;\n    //     return this;\n    // },\n\n    /**\n     * Rotate vector around specified point of rotation\n     * Note: Will rotate around origin\n     * @param {number} angle - amount of rotation in radians\n     * @return {This} for chaining\n     */\n    rotate: function(angle) {\n        let sin = Math.sin(angle);\n        let cos = Math.cos(angle);\n        let x = (this.x * cos) - (this.y * sin);\n        let y = (this.x * sin) + (this.y * cos);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /**\n     * Dot product between two vectors\n     * Does NOT modify internal state\n     * @param {Vector} vec - the vector to dot with\n     * @return {number} dot product\n     */\n    dot: function(vec) {\n        return this.x * vec.x + this.y * vec.y;\n    },\n\n    /**\n     * Cross product between two vectors\n     * Does NOT modify internal state\n     * @method\n     * @param {Vector} vec - the vec to cross with\n     * @return {number} cross product\n     */\n    cross: function(vec) {\n        return this.x * vec.y - this.y * vec.x;\n    },\n\n    /**\n     * Return angle between two vectors in radians\n     * @param {Vector} vec - vector to find angle to\n     * @return {number} theta - radians between two vectors\n     */\n    angleTo: function(vec) {\n        let a = this.magnitude();\n        let b = vec.magnitude();\n        let d = this.dot(vec);\n\n        let theta = Math.acos(d / (a * b));\n        return theta;\n    },\n\n    /**\n     * Return angle from 0 of this vector\n     * @method\n     * @param {string} [mode] - if mode = 'DEGREES', return value will be in\n     * degrees, otherwise radians\n     * @return {number} angle in degrees or radians (depending on mode)\n     *\n     */\n    getAngle: function(mode) {\n        if (mode === 'DEGREES') {\n            let angle = Math.atan(this.y / this.x);\n            return angle * 180 / Math.PI;\n            // return radToDeg(Math.atan(this.y / this.x));\n        }\n        let a = Math.atan2(this.y, this.x);\n        //return a;\n        return a < 0 ? Math.PI * 2 + a : a;\n    },\n\n    /**\n     * Convert to a unit vector\n     * i.e. change length of vector to 1\n     * @method\n     * @return {This} for chaining\n     */\n    normalize: function() {\n        let mag = this.magnitude();\n        this.x /= mag;\n        this.y /= mag;\n        return this;\n    },\n\n    /**\n     * Create normal vector based on current vector\n     * Modifies internal state!\n     * @param {string} side - specify 'left' or 'right' normal\n     * @return {This} for chaining\n     */\n    perp: function(side) {\n        if (side === 'right') {\n            let tmp = this.x;\n            this.x = this.y;\n            this.y = -tmp;\n        } else {\n            let tmp = this.x;\n            this.x = -this.y;\n            this.y = tmp;\n        }\n        return this;\n    },\n\n    /**\n     * Calculate euclidian distance between two vectors\n     * @param {Vector} vec - vector to find distance to\n     * @return {number} euclidean distance\n     */\n    distanceTo: function(vec) {\n        return Math.sqrt((vec.x - this.x) * (vec.x - this.x) + (vec.y - this.y) * (vec.y - this.y));\n    },\n\n    /**\n     * Scalar Projection of A onto B assuming B is NOT a unit vector\n     * @param {Vector} vec - the vector to project onto\n     * @return {number} component of A on B\n     */\n    scalarProject: function(vec) {\n        return this.dot(vec) / vec.magnitude();\n    },\n\n    /**\n     * Calculate Scalar projection of A onto B assuming that B is a unit vector\n     * This is more efficient assuming we already have a unit vector\n     * @param {Vector} vec - the unit vector to project onto\n     * @return {number} component of A on B\n     */\n    scalarProjectUnit: function(vec) {\n        return this.dot(vec);\n    },\n\n    /**\n     * Vector Projection of A onto B assuming B is NOT a unit vector\n     * @param {Vector} vec - vector to project onto\n     * @return {This} for chaining\n     */\n    vectorProject: function(vec) {\n        let scalarComp = this.dot(vec) / vec.magnitudeSq();\n        this.x = vec.x * scalarComp;\n        this.y = vec.y * scalarComp;\n        return this;\n    },\n\n    /**\n     * Vector Projection of A onto B assuming B IS a unit vector\n     * @param {Vector} vec - vector to project onto\n     * @return {This} for chaining\n     */\n    vectorProjectUnit: function(vec) {\n        let scalarComp = this.dot(vec);\n        this.x = vec.x * scalarComp;\n        this.y = vec.y * scalarComp;\n        return this;\n    }\n};\n\nVector.prototype.translate = Vector.prototype.add;\n\n/**\n * Convenience function so we can ignore the 'new' keyword\n * @param {number} x - initial x value\n * @param {number} y - initial y value\n * @return {Vector} a new vector object\n */\nvar vector = function(x, y) {\n    return new Vector(x, y);\n};\n\n// ---------- Static Methods -----------//\n/**\n * @static\n * @param {Vector} v1 - first Vector obj\n * @param {Vector} v2 - second Vector obj\n * @return {Vector}\n *\n * Adds two vectors, and returns a new one\n */\nVector.add = function(v1, v2) {\n    return new Vector(v1.x + v2.x, v1.y + v2.y);\n};\nVector.subtract = function(v1, v2) {\n    return new Vector(v1.x - v2.x, v1.y - v2.y);\n};\nVector.multiply = function(v1, v2) {\n    if (typeof v1 === 'number' && typeof v2 === 'number') {\n        return v1 * v2;\n    }\n\n    if (typeof v1 === 'object' && typeof v2 === 'number') {\n        return new Vector(v1.x * v2, v1.y * v2);\n    }\n\n    if (typeof v2 === 'object' && typeof v1 === 'number') {\n        return new Vector(v1 * v2.x, v1 * v2.y);\n    }\n\n    return new Vector(v1.x * v2.x, v1.y * v2.y);\n};\nVector.dot = function(v1, v2) {\n    return v1.x * v2.x + v1.y * v2.y;\n};\nVector.angleBetween = function(v1, v2) {\n    let a = v1.magnitude();\n    let b = v2.magnitude();\n    let d = v1.dot(v2);\n\n    let theta = Math.acos(d / (a * b));\n    return theta;\n};\nVector.perp = function(v1, side) {\n    switch (side) {\n        case 'right':\n            return new Vector(v1.y, -v1.x);\n        default:\n            return new Vector(-v1.y, v1.x);\n    }\n};\nVector.negate = function(v) {\n    return new Vector(-v.x, -v.y);\n};\n\nexport default vector;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Vector.js"],"sourceRoot":""}